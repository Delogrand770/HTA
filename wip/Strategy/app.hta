<html xmlns:v="urn:schemas-microsoft-com:vml">
<head><title>App</title>
<link rel=StyleSheet href="xcss.css" type="text/css">
<script src="gaia.js"></script>
<style>
v\:* {behavior:url(#default#VML);}

body{
  font-size: 11;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family:arial,sans-serif;
}

.txt{
 text-align:center;
 line-height:3em;
 font-weight:bold;
}

.txt3{
 font-size:10;
 font-weight:bold;
 text-align:center;
}

.block{
 position:absolute;
 width:50;
 height:50;
}

.block2{
 position:absolute;
 width:35;
 height:25;
}

.btn{
 border:1 solid black;
 background-Color:white;
 color:black;
 width:70;
}
</style>

<script>
XU.ResizeWindow(750,750,0,1);
var pown1      = 0;
var pown2      = 0;
var wintime    = 0;
var p1gold     = 0;
var p2gold     = 0;
var moveamt    = 2;
var timers3    = new Array();
var troops     = new Array();
var selected   = new Array(-1,-1);
var level      = new Array();
var docprop    = new Array(0,0);
var timers1    = new Array();
var timers2    = new Array();
var string1    = new Array('<v:roundrect class="block" id="terr','" onclick="App.GetTerritory(this.id)"><v:textbox class="txt" id="txt','"></v:textbox></v:roundrect>');
var string2    = new Array('<v:roundrect class="block2" id="troop','"><v:textbox class="txt2" id="trp','"></v:textbox></v:roundrect>');
var textcolors = new Array('black','black','white');
var terrcolors = new Array('silver','red','blue');
var terrs      = new Array();
var xsave_vars = new Array('level');
var xall_vars  = new Array('level');
var gamelvl    = 'level';
var App={
	Ini:function(){
		XM.Ini();
		XDS.Ini();
		docprop  = new Array(document.body.clientHeight,document.body.clientWidth);
		App.LoadLevel(gamelvl);
	},
	Reset:function(){
		for (i=0;i<timers1.length;i++){
			clearInterval(timers1[i]);
		}
		for (i=0;i<timers2.length;i++){
			clearInterval(timers2[i]);
		}
		for (i=0;i<timers3.length;i++){
			clearInterval(timers3[i]);
		}
		timers1 = timers1.splice(0,timers1.length-1);
		timers2 = timers2.splice(0,timers2.length-1);
		timers3 = timers3.splice(0,timers3.length-1);
		setTimeout("main.innerHTML = '';App.LoadLevel(gamelvl);",1000);
	},
	LoadLevel:function(it){
		XM.Close();
		App.MoveSize(1);
		p1gold   = 0;
		p2gold   = 0;
		pown1    = 0;
		pown2    = 0;
		selected = new Array(-1,-1);
		XDS.Load(it+'.txt');
		for (i=0;i<level.length;i++){
			terrs[terrs.length] = new App.Territory(level[i][0],level[i][1],level[i][2],level[i][3],level[i][4],level[i][5]);
		}
	},
	Troop:function(iowner,itarget,itroops,itop,ileft,ittop,itleft){
		this.Update = function(){
			XU.El('troop'+this.index).style.top  = this.top[0];
			XU.El('troop'+this.index).style.left = this.left[0];
		}

		this.Ani = function(it){
			if (!it){
				timers3[this.index] = setInterval("window['troops']["+this.index+"].Ani(1)",100);
			}else{
				this.inspot = 0;
				if (this.top[0]!=this.top[1]){
					if (Math.abs(this.top[0]-this.top[1])>=11){
						if (this.top[0] < this.top[1]){
							this.top[0] -=- 10;
						}else{
							this.top[0] -= 10;
						}
					}else{
						this.inspot++;
					}
					if (Math.abs(this.left[0]-this.left[1])>=11){
						if (this.left[0] < this.left[1]){
							this.left[0] -=- 10;
						}else{
							this.left[0] -= 10;
						}
					}else{
						this.inspot++;
					}
					if (this.inspot == 2){
						XI.Hide('troop'+this.index);
						clearInterval(timers3[this.index]);
						if (this.owner == terrs[this.target].owner){
							terrs[this.target].Change('a'+this.owner,this.troops);
						}else{
							terrs[this.target].Change('a'+this.owner,-this.troops);
						}
					}
					this.Update();
				}
			}
		}
		this.inspot = 0;
		this.top    = new Array(itop,ittop);
		this.left   = new Array(ileft,itleft);
		this.index  = troops.length;
		this.owner  = iowner;
		this.target = itarget;
		this.troops = itroops;
		XU.El('main').innerHTML += string2[0] + this.index + string2[1] + this.index + string2[2];
		XU.El('trp'+this.index).innerHTML   = this.troops;
		XU.El('troop'+this.index).fillcolor = terrcolors[this.owner];
		XU.El('trp'+this.index).style.color = textcolors[this.owner];
		this.Update();
		this.Ani();
	},
	WinCheck:function(){
		pown1 = pown2 = 0;
		for (i=0;i<terrs.length;i++){
			window['pown'+terrs[i].owner]++
		}
		if (pown1 == terrs.length-1){
			XM.Alert('Winner','Player 1 wins',0,0,1);
			App.Reset();
		}else if (pown2 == terrs.length-1){
			XM.Alert('Winner','Player 2 wins',0,0,1);
			App.Reset();
		}else if (pown1 == 0){
			XM.Alert('Winner','Player 2 wins',0,0,1);
			App.Reset();
		}else if (pown2 == 0){
			XM.Alert('Winner','Player 1 wins',0,0,1);
			App.Reset();
		}
	},
	Territory:function(iowner,itotal,itype,imax,itop,ileft){
		this.Upkeep = function(it){
			if (it==1){
				timers2[this.index] = setInterval("window['terrs']["+this.index+"].Upkeep()",4000);
			}
			this.slwcnt++;
			if (this.owner == 0){
				if (this.slwcnt>0){
					this.total -=- 1;
					this.slwcnt = 0;
				}
			}else{
				if (this.slwcnt>1 && this.owner!=0){
					window['p'+this.owner+'gold']++;
					this.slwcnt = 0;
				}
				this.total -=- 2;
			}
			if (this.total > this.max){
				this.total = this.max;
			}
			this.Update();
		}

		this.Change = function(iowner,itotal,itype,imax,itop,ileft){
			if (itop){
				this.top = new Array(this.offsety,itop);
			}
			if (ileft){
				this.left = new Array(this.offsetx,ileft);
			}
			if (iowner!='' && Math.round(iowner*1)==iowner){
				this.owner = iowner;
			}
			if (itotal!=''){
				this.total -=- itotal;
				if (this.total<0){
					App.WinCheck();
					this.total = Math.abs(this.total);
					this.owner = parseInt(iowner.split('a')[1]);
				}
				if (this.total > this.max){
					this.total = this.max;
				}
			}
			if (itype){
				this.type = itype;
			}
			if (imax){
				this.max = imax;
			}
			this.Update();
		}

		this.Update = function(){
			XU.El('terr'+this.index).style.top  = this.top[0];
			XU.El('terr'+this.index).style.left = this.left[0];
			XU.El('terr'+this.index).fillcolor  = terrcolors[this.owner];
			XU.El('txt'+this.index).style.color = textcolors[this.owner];
			XU.El('txt'+this.index).innerHTML   = this.total + '/' + this.max;
			if (this.owner!=0){
				window['gold'+this.owner].innerHTML = terrcolors[this.owner]+'\'s Gold: ' + window['p'+this.owner+'gold'];
			}
		}

		this.Ani = function(it){
			if (!it){
				timers1[this.index] = setInterval("window['terrs']["+this.index+"].Ani(1)",1);
			}else{
				this.inspot = 0;
				if (this.top[0]!=this.top[1]){
					if (Math.abs(this.top[0]-this.top[1])>=11){
						if (this.top[0] < this.top[1]){
							this.top[0] -=- 10;
						}else{
							this.top[0] -= 10;
						}
					}else{
						this.inspot++;
					}
					if (Math.abs(this.left[0]-this.left[1])>=11){
						if (this.left[0] < this.left[1]){
							this.left[0] -=- 10;
						}else{
							this.left[0] -= 10;
						}
					}else{
						this.inspot++;
					}
					if (this.inspot == 2){
						clearInterval(timers1[this.index]);
					}
					this.Update();
				}
			}
		}
		if (Math.round(Math.random()*1)){
			this.offsety = Math.round(Math.random()*docprop[0]);
			if (Math.round(Math.random()*1)){
				this.offsetx = -60;
			}else{
				this.offsetx = Math.round(docprop[1]+60);
			}
		}else{
			this.offsetx = Math.round(Math.random()*docprop[1]);
			if (Math.round(Math.random()*1)){
				this.offsety = -60;
			}else{
				this.offsety = Math.round(docprop[0]+60);
			}
		}
		this.slwcnt = 0;
		this.inspot = 0;
		this.top    = new Array(-60,0);
		this.left   = new Array(-60,0);
		this.index  = terrs.length;
		this.owner  = 0;
		this.type   = 1;
		this.max    = 10;
		this.total  = 0;
		XU.El('main').innerHTML += string1[0] + this.index + string1[1] + this.index + string1[2];
		this.Change(iowner,itotal,itype,imax,itop,ileft);
		this.Ani();
		this.Upkeep(1);
	},
	MoveSize:function(it){
		moveamt                               = it;
		XU.El('btn1').style.backgroundColor   = 'white';
		XU.El('btn2').style.backgroundColor   = 'white';
		XU.El('btn3').style.backgroundColor   = 'white';
		XU.El('btn4').style.backgroundColor   = 'white';
		XU.El('btn'+it).style.backgroundColor = 'gold';
		XU.El('btn'+it).blur();
	},
	GetTerritory:function(it,it2){
		var temp2 = terrs[parseInt(it.split('terr')[1])];
		if (selected[0] == -1 && temp2.owner == 1){
			selected[0] = it;
			XU.El(it).strokeweight = 2;
			XU.El(it).strokecolor  = 'black';
			if (moveamt == 4){
				var temp3 = Math.round((((temp2.max/5)*2)+1)*2);
				if (p1gold >= temp3){
					p1gold -= temp3;
					temp2.max -=- 5;
					temp2.Update();
				}else{
					document.title = 'Need ' + temp3 + ' gold';
				}
				selected = new Array(-1,-1);
				XU.El(it).strokeweight = 1;
			}
		}else if (selected[1] == -1 && selected[0]!=-1){
			selected[1]            = it;
			XU.El(it).strokeweight = 2;
			XU.El(it).strokecolor  = 'green';
			if (selected[0]!=-1 && selected[1]!=-1){
				var temp = new Array(terrs[parseInt(selected[0].split('terr')[1])],terrs[parseInt(selected[1].split('terr')[1])]);
				if (moveamt == 2){
					temp[2] = Math.floor(temp[0].total/2);
				}else if (moveamt == 1){
					temp[2] = temp[0].total;
				}else if (moveamt == 3){
					temp[2] = Math.floor(temp[0].total/4);
				}
				if (selected[0]!=selected[1] && temp[2]>=1){
					temp[0].Change('',-temp[2]);
					troops[troops.length] = new App.Troop(temp[0].owner,temp[1].index,temp[2],temp[0].top[0],temp[0].left[0],temp[1].top[0],temp[1].left[0]);
				}
				XU.El(selected[0]).strokeweight = 1;
				XU.El(selected[0]).strokecolor  = 'black';	
				XU.El(selected[1]).strokeweight = 1;
				XU.El(selected[1]).strokecolor  = 'black';
				selected = new Array(-1,-1);
				
			}
		}
	}
};
</script>
</head>
<body onload="App.Ini();">
<HTA:APPLICATION ID="app"
    APPLICATIONNAME="app"
    BORDER="normal"
    BORDERSTYLE="normal"
    CAPTION="yes"
    ICON="ico.ico"
    SCROLL="no"
    MAXIMIZEBUTTON="yes"
    MINIMIZEBUTTON="yes"
    INNERBORDER="no"
    CONTEXTMENU="no"
    SINGLEINSTANCE="yes"
    WINDOWSTATE="normal"
    SYSMENU="yes"
    SHOWINTASKBAR="yes"
    SCROLLFLAT="yes"
    NAVIGABLE="no"
    SELECTION="no">
<div id="main"> </div>
<div style="position:absolute;top:2;left:10;">
<input type="button" value="All" class="btn" onclick="App.MoveSize(1)" id="btn1"> <input type="button" value="Half" class="btn" onclick="App.MoveSize(2)" id="btn2"> <input type="button" value="Fourth" class="btn" onclick="App.MoveSize(3)" id="btn3"> <input type="button" value="Upgrade" class="btn" onclick="App.MoveSize(4)" id="btn4"> <span id="gold1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="gold2"></span></div>



</body>
</html>