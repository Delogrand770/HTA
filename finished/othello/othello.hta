<html>
<head><title>Othello</title>
<script>var xdev = 0;</script>
<script src="gaia.js"></script>
<style>
body{
  font-size: 9;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family:arial,sans-serif;
  color:silver;
}
.text{
 background-Color:transparent;
 color:grey;
 border:1 solid silver;
}
.btn{
 background-Color:transparent;
 color:silver;
 border:0 solid silver;
 height:20;
 cursor:hand;
}
.square{
 height:64;
 width:64;
 border:1 solid silver;
}
.Empty{
 background:url('img/empty.png');
}
.Blue{
 background:url('img/blue.png');
}
.Red{
 background:url('img/red.png');
}
</style>

<script>
if (xdev!=1){
	alert('Please extract all files before running');
	window.close();
}
XU.ResizeWindow(700,1024,0,1);
var ani       = 1;
var grid_data = new Array();
var whos_turn = 0;
var oppo_turn = 0;
var loaded    = 0;
var App={
	Ini:function(){
		XL.Ini(0);
		//XU.ErrorHandler(0);
		XM.Ini();
		XM.Alert('Welcome to Othello','Created by Gavin Delphia',1);
		setTimeout("App.Reset();",2000);
	},
	Reset:function(){
		XL.Log('New Game',1);
		injects.innerHTML = '';
		whos_turn         = 0;
		oppo_turn         = 0;
		XI.New('injects','grid','1:1','600:600',0);
		XI.New('injects','scoreleft','1:1','100:120',1);
		XI.New('injects','scoreright','1:1','100:120',1);
		scoreleft.style.left = 40;
		XU.DFR('scoreright',40);
		XU.CenterElement('scoreleft','v');
		XU.CenterElement('scoreright','v');
		XI.Fill('scoreleft','Blue\'s Score','<center>2</center>',0);
		XI.Fill('scoreright','Red\'s Score','<center>2</center>',0);
		App.Turn(2);
		setTimeout("XM.Alert('Use Animations?','This may impact performance on slower computers.<br><br>',2);XM.Texts('Yes','No');XM.Actions('ani=1;XM.Close();App.DrawGrid();','ani=0;XM.Close();App.DrawGrid();');",100);
		loaded = 1;
	},
	DrawGrid:function(){
		XL.Log('Animations = '+ani,1);
		var to_inject = '<center><table cellpadding=0 cellspacing=0 style="border:1 solid silver;">';
		var iclass;
		for (a=0;a<8;a++){
			grid_data[a] = new Array();
			to_inject   += '<tr>';
			for (b=0;b<8;b++){
				iclass     = ((b==4 && a==4)||(b==3 && a==3))?'Blue':((b==4 && a==3)||(b==3 && a==4))?'Red':'Empty';
				to_inject += '<td class="'+iclass+' square" id="x'+a+'x'+b+'x" onclick="App.Play('+a+','+b+')">&nbsp;</td>';
				grid_data[a][b] = iclass;
			}
			to_inject += '</tr>';
		}
		to_inject += '</table><br>';
		to_inject += '<a onclick="App.Turn(1,1)" style="cursor:hand;">Pass</a></center>';
		XI.Fill('grid',whos_turn+'\'s Turn',to_inject,1);
		XU.CenterElement('grid','b');
		if (ani == 1){
			for (a=0;a<8;a++){
				for (b=0;b<8;b++){
					XU.El('x'+a+'x'+b+'x').style.filter = 'progid:DXImageTransform.Microsoft.Fade(duration=1)';
				}
			}
		}
		XI.Show('scoreleft');
		XI.Show('Scoreright');
		App.Resize();
	},
	Resize:function(){
		if (loaded == 1){
			XU.CenterElement('scoreleft','v');
			XU.CenterElement('scoreright','v');
			XU.CenterElement('grid','b');
			XU.DFR('scoreright',40);
		}
		XM.Center();
	},
	Play:function(it,it2){
		if (whos_turn!=0){
			if (grid_data[it][it2]=='Empty' && App.ValidMove(it,it2)){
				grid_data[it][it2] = whos_turn;
				XU.Class('x'+it+'x'+it2+'x',whos_turn+' square');
				App.Flip(it,it2);
			}
		}else{
			XM.Alert('Play Again?','',2);
			XM.Actions('App.Reset();','XM.Close()');
		}
	},
	Flip:function(it,it2){
		var y  = it;
		var x  = it2;
		var pi = -1;
		var vm = 0;
		if (y<7 && grid_data[y+1][x]==oppo_turn){ //Down
			for (i=y+1;i<=7;i++){
				if (grid_data[i][x]==whos_turn){
					pi = i;
					vm = 1;
				}else if (grid_data[i][x]=='Empty'){
					break;
				}
			}
			if (pi!=-1){
				for (i=y+1;i<pi;i++){
					if (ani == 1){
						XU.El('x'+i+'x'+x+'x').filters[0].Apply();
					}
					grid_data[i][x] = whos_turn;
					XU.Class('x'+i+'x'+x+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+i+'x'+x+'x').filters[0].Play();
					}
				}
			}
		}
		
		pi = -1;
		if (y>0 && grid_data[y-1][x]==oppo_turn){ //Up
			for (i=y-1;i>=0;i--){
				if (grid_data[i][x]==whos_turn){
					pi = i;
					vm = 1;
				}else if (grid_data[i][x]=='Empty'){
					break;
				}
			}
			if (pi!=-1){
				for (i=y-1;i>pi;i--){
					if (ani == 1){
						XU.El('x'+i+'x'+x+'x').filters[0].Apply();
					}
					grid_data[i][x] = whos_turn;
					XU.Class('x'+i+'x'+x+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+i+'x'+x+'x').filters[0].Play();
					}
				}
			}
		}
		
		pi = -1;
		if (x<7 && grid_data[y][x+1]==oppo_turn){ //Right
			for (i=x+1;i<=7;i++){
				if (grid_data[y][i]==whos_turn){
					pi = i;
					vm = 1;
				}else if (grid_data[y][i]=='Empty'){
					break;
				}
			}
			if (pi!=-1){
				for (i=x+1;i<pi;i++){
					if (ani == 1){
						XU.El('x'+y+'x'+i+'x').filters[0].Apply();
					}
					grid_data[y][i] = whos_turn;
					XU.Class('x'+y+'x'+i+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+y+'x'+i+'x').filters[0].Play();
					}
				}
			}
		}
		
		pi = -1;
		if (x>0 && grid_data[y][x-1]==oppo_turn){ //Left
			for (i=x-1;i>=0;i--){
				if (grid_data[y][i]==whos_turn){
					pi = i;
					vm = 1;
				}else if (grid_data[y][i]=='Empty'){
					break;
				}
			}
			if (pi!=-1){
				for (i=x-1;i>pi;i--){
					if (ani == 1){
						XU.El('x'+y+'x'+i+'x').filters[0].Apply();
					}
					grid_data[y][i] = whos_turn;
					XU.Class('x'+y+'x'+i+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+y+'x'+i+'x').filters[0].Play();
					}
				}
			}
		}

		pi = -1;
		if (y<7 && x<7 && grid_data[y+1][x+1]==oppo_turn){ //Down Right
			for (i=1;i<=7;i++){
				if (y+i<=7 && x+i<=7){
					if (grid_data[y+i][x+i]==whos_turn){
						pi = i;
						vm = 1;
					}else if (grid_data[y+i][x+i]=='Empty'){
						break;
					}
				}
			}
			if (pi!=-1){
				for (i=1;i<pi;i++){
					if (ani == 1){
						XU.El('x'+(y+i)+'x'+(x+i)+'x').filters[0].Apply();
					}
					grid_data[y+i][x+i] = whos_turn;
					XU.Class('x'+(y+i)+'x'+(x+i)+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+(y+i)+'x'+(x+i)+'x').filters[0].Play();
					}
				}
			}
		}

		pi = -1;
		if (y>0 && x>0 && grid_data[y-1][x-1]==oppo_turn){ //Up Left
			for (i=1;i<=7;i++){
				if (y-i>=0 && x-i>=0){
					if (grid_data[y-i][x-i]==whos_turn){
						pi = i;
						vm = 1;
					}else if (grid_data[y-i][x-i]=='Empty'){
						break;
					}
				}
			}
			if (pi!=-1){
				for (i=1;i<pi;i++){
					if (ani == 1){
						XU.El('x'+(y-i)+'x'+(x-i)+'x').filters[0].Apply();
					}
					grid_data[y-i][x-i] = whos_turn;
					XU.Class('x'+(y-i)+'x'+(x-i)+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+(y-i)+'x'+(x-i)+'x').filters[0].Play();
					}
				}
			}
		}

		pi = -1;
		if (y<7 && x>0 && grid_data[y+1][x-1]==oppo_turn){ //Down Left
			for (i=1;i<=7;i++){
				if (y+i<=7 && x-i>=0){
					if (grid_data[y+i][x-i]==whos_turn){
						pi = i;
						vm = 1;
					}else if (grid_data[y+i][x-i]=='Empty'){
						break;
					}
				}
			}
			if (pi!=-1){
				for (i=1;i<pi;i++){
					if (ani == 1){
						XU.El('x'+(y+i)+'x'+(x-i)+'x').filters[0].Apply();
					}
					grid_data[y+i][x-i] = whos_turn;
					XU.Class('x'+(y+i)+'x'+(x-i)+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+(y+i)+'x'+(x-i)+'x').filters[0].Play();
					}
				}
			}
		}

		pi = -1;
		if (y>0 && x<7 && grid_data[y-1][x+1]==oppo_turn){ //Up Right
			for (i=1;i<=7;i++){
				if (y-i>=0 && x+i<=7){
					if (grid_data[y-i][x+i]==whos_turn){
						pi = i;
						vm = 1;
					}else if (grid_data[y-i][x+i]=='Empty'){
						break;
					}
				}
			}
			if (pi!=-1){
				for (i=1;i<pi;i++){
					if (ani == 1){
						XU.El('x'+(y-i)+'x'+(x+i)+'x').filters[0].Apply();
					}
					grid_data[y-i][x+i] = whos_turn;
					XU.Class('x'+(y-i)+'x'+(x+i)+'x',whos_turn+' square');
					if (ani == 1){
						XU.El('x'+(y-i)+'x'+(x+i)+'x').filters[0].Play();
					}
				}
			}
		}
		if (vm!=1){
			grid_data[it][it2] = 'Empty';
			XU.Class('x'+it+'x'+it2+'x','Empty square');
			XL.Log('Moves must take a piece',1);
		}else{
			XL.Log(whos_turn+' moves '+y+','+x,1);
			App.Turn(1);
			App.PieceCount();
		}
	},
	Turn:function(it,it2){
		if (it2 == 1 && whos_turn!=0){
			XL.Log(whos_turn+' Passed',1);
		}
		if (it == 1 && whos_turn!=0){
			if (whos_turn == 'Red'){
				whos_turn = 'Blue';
				oppo_turn = 'Red';
			}else{
				whos_turn = 'Red';
				oppo_turn = 'Blue';
			}
			XI.Title('grid',whos_turn+'\'s Turn');
		}else if (it == 2){
			whos_turn = (Math.round(1*Math.random())==0)?'Red':'Blue';
			oppo_turn = (whos_turn=='Red')?'Blue':'Red';
			XL.Log(whos_turn+' Starts',1);
		}
	},
	ValidMove:function(it,it2){
		var y = it;
		var x = it2;
		if ((y>0 && grid_data[y-1][x]!='Empty') || (y<7 && grid_data[y+1][x]!='Empty') || (x>0 && grid_data[y][x-1]!='Empty') || (x<7 && grid_data[y][x+1]!='Empty') || (y<7 && x<7 && grid_data[y+1][x+1]!='Empty') || (y>0 && x>0 && grid_data[y-1][x-1]!='Empty') || (y<7 && x>0 && grid_data[y+1][x-1]!='Empty') || (y>0 && x<7 && grid_data[y-1][x+1]!='Empty')){
			return true;
		}
		XL.Log('Moves must touch another piece',1);
		return false;
	},
	PieceCount:function(){
		var red   = 0;
		var blue  = 0;
		var empty = 0;
		for (a=0;a<8;a++){
			for (b=0;b<8;b++){
				if (grid_data[a][b]=='Red'){
					red++;
				}else if (grid_data[a][b]=='Blue'){
					blue++;
				}else{
					empty++;
				}
			}
		}
		XI.Fill('scoreleft','Blue\'s Score','<center>'+blue+'</center>',1);
		XI.Fill('scoreright','Red\'s Score','<center>'+red+'</center>',1);
		XL.Log('[Scores] R:'+red+' B:'+blue+' E:'+empty,1);
		if (red == 0){
			whos_turn = 0;
			XI.Title('grid','Blue Wins');
			XL.Log('Blue Wins',1);
		}else if (blue == 0){
			whos_turn = 0;
			XI.Title('grid','Red Wins');
			XL.Log('Red Wins',1);
		}else if (empty == 0){
			if (red==blue){
				whos_turn = 0;
				XI.Title('grid','Tie Game');
				XL.Log('Tie Game',1);
			}else if (red>blue){
				whos_turn = 0;
				XI.Title('grid','Red Wins');
				XL.Log('Red Wins',1);
			}else{
				whos_turn = 0;
				XI.Title('grid','Blue Wins');
				XL.Log('Blue Wins',1);
			}
		}
	}
};
</script>
</head>
<body onload="App.Ini();" background="img/bg.png" onresize="App.Resize()">
<HTA:APPLICATION ID="othello"
    APPLICATIONNAME="othello"
    BORDER="normal"
    BORDERSTYLE="normal"
    CAPTION="yes"
    ICON="ico.ico"
    SCROLL="no"
    MAXIMIZEBUTTON="yes"
    MINIMIZEBUTTON="yes"
    INNERBORDER="no"
    CONTEXTMENU="no"
    SINGLEINSTANCE="yes"
    WINDOWSTATE="normal"
    SYSMENU="yes"
    SHOWINTASKBAR="yes"
    SCROLLFLAT="yes"
    NAVIGABLE="no"
    SELECTION="no">

<span id="injects"></span>

</body>
</html>